#include <iostream>
using namespace std;

// Fungsi untuk mencari nilai maksimum dalam array
int getMax(int arr[], int n) {
    int max = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] > max) {
            max = arr[i];
        }
    }
    return max;
}

// Fungsi untuk melakukan counting sort berdasarkan digit ke-t di posisi pos
void countSort(int arr[], int n, int exp) {
    int output[n]; // array untuk menyimpan hasil sorting
    int count[10] = {0}; // array untuk menyimpan jumlah kemunculan digit

    // Mengisi count[] dengan jumlah kemunculan setiap digit
    for (int i = 0; i < n; i++) {
        count[(arr[i] / exp) % 10]++;
    }

    // Mengubah count[] sehingga count[i] sekarang berisi posisi aktual
    // dari digit di output[] array
    for (int i = 1; i < 10; i++) {
        count[i] += count[i - 1];
    }

    // Membangun array output
    for (int i = n - 1; i >= 0; i--) {
        output[count[(arr[i] / exp) % 10] - 1] = arr[i];
        count[(arr[i] / exp) % 10]--;
    }

    // Menyalin array output[] ke array arr[]
    for (int i = 0; i < n; i++) {
        arr[i] = output[i];
    }
}

// Fungsi untuk melakukan radix sort
void radixSort(int arr[], int n) {
    // Mencari nilai maksimum dalam array untuk menentukan jumlah digit
    int max = getMax(arr, n);

    // Melakukan counting sort untuk setiap digit, dimulai dari digit paling rendah
    for (int exp = 1; max / exp > 0; exp *= 10) {
        countSort(arr, n, exp);
    }
}

// Fungsi untuk menampilkan array
void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

// Fungsi main untuk pengujian
int main() {
    int arr[] = {170, 45, 75, 90, 802, 24, 2, 66};
    int n = sizeof(arr) / sizeof(arr[0]);
    cout << "Array sebelum sorting: ";
    printArray(arr, n);
    radixSort(arr, n);
    cout << "Array setelah sorting: ";
    printArray(arr, n);
    return 0;
}
