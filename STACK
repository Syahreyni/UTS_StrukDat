#include <iostream>

using namespace std;

class Stack {
private:
    int *arr;
    int top;
    int capacity;

public:
    Stack(int capacity) {
        this->capacity = capacity;
        this->top = -1;
        this->arr = new int[capacity];
    }

    ~Stack() {
        delete[] arr;
    }

    void push(int value) {
        if (top == capacity - 1) {
            cout << "Stack is full. Cannot push " << value << endl;
            return;
        }
        arr[++top] = value;
    }

    int pop() {
        if (top == -1) {
            cout << "Stack is empty. Cannot pop." << endl;
            return -1;
        }
        return arr[top--];
    }

    int peek() {
        if (top == -1) {
            cout << "Stack is empty." << endl;
            return -1;
        }
        return arr[top];
    }

    bool isEmpty() {
        return top == -1;
    }

    bool isFull() {
        return top == capacity - 1;
    }

    void printStack() {
        for (int i = 0; i <= top; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }
};

int main() {
    Stack stack(5);

    stack.push(1);
    stack.push(2);
    stack.push(3);
    stack.printStack(); // Output: 1 2 3

    cout << "Popped: " << stack.pop() << endl; // Output: 3
    stack.printStack(); // Output: 1 2

    cout << "Peek: " << stack.peek() << endl; // Output: 2

    stack.push(4);
    stack.push(5);
    stack.printStack(); // Output: 1 2 4 5

    cout << "Is empty? " << (stack.isEmpty()? "Yes" : "No") << endl; // Output: No
    cout << "Is full? " << (stack.isFull()? "Yes" : "No") << endl; // Output: Yes

    return 0;
}
